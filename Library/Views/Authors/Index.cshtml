@model IEnumerable<Library.Models.Author>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>作者列表</h2>
<script src="~/Scripts/echarts.common.min.js"></script>
<div id="main" style="width: 900px;height:800px;"></div>
<p>
    <a href="/Authors/Create" class="btn btn-default">添加作者</a>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th></th>
    </tr>
@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            <a href="/Authors/Edit/@item.Id" class="btn btn-default">编辑作者信息</a>
            <a href="/Authors/Details/@item.Id" class="btn btn-default">作者信息</a>
            <a href="/Authors/Delete/@item.Id" class="btn btn-default">删除作者</a>
        </td>
    </tr>
}
</table>
<script type="text/javascript">
    var myChart = echarts.init(document.getElementById('main'));

    myChart.setOption({
        color: ['#3398DB','#fff'],
        tooltip: {
            trigger: 'axis',
            axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
            }
        },
        grid: {
            left: '3%',
            right: '4%',
            bottom: '3%',
            containLabel: true
        },
        xAxis: [
            {
                type: 'value',
            }
        ],
        yAxis: [
            {
                type: 'category',
                data: [],
                axisTick: {
                    alignWithLabel: true
                }
            }
        ],
        series: [
            {
                name: '出版图书',
                type: 'bar',
                barWidth: '60%',
                data: []
            }
        ]
    });

    // 异步加载数据
    var data;
    $.get('/api/authors').done(function (data) {
        myChart.hideLoading();
        myChart.setOption({
            xAxis: [
                {
                    type: 'category',
                    data: data.map((d) =>d.Name),
                }
            ],
            series: [{
                // 根据名字对应到相应的系列
                data: data.map((d) =>d.Count)
            }]
        });
    });
</script>